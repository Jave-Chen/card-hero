/******/ ((modules, runtime) => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/
/******/ 	// initialize runtime
/******/ 	runtime(__webpack_require__);
/******/
/******/ 	// run startup
/******/ 	return __webpack_require__.x();
/******/ })
/************************************************************************/
/******/ ({

/***/ 71:
/*!**************************************************!*\
  !*** ./ClientApp/models/GameTripleTriadModel.ts ***!
  \**************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ GameTripleTriadModel
/* harmony export */ });
/* harmony import */ var _GameTripleTrialMoveModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GameTripleTrialMoveModel */ 937);

class GameTripleTriadModel {
    from(o) {
        if (!o)
            return this;
        this.columns = o.columns;
        this.rows = o.rows;
        if (o.moves) {
            this.moves = o.moves.map(x => new _GameTripleTrialMoveModel__WEBPACK_IMPORTED_MODULE_0__.default().from(x));
        }
        return this;
    }
}


/***/ }),

/***/ 103:
/*!**************************************!*\
  !*** ./ClientApp/clients/clients.ts ***!
  \**************************************/
/*! export AccountApiClient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ApiException [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CardApiClient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CardCollectionModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CardModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CollectionApiClient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DeckApiClient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DeckCardModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DeckModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ErrorViewModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GameApiClient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GameModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GameTripleTriadMoveViewModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GameType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GameViewModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Rarity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export StoreApiClient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export StoreItemModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TurnModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export UserModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__ */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccountApiClient": () => /* binding */ AccountApiClient,
/* harmony export */   "CardApiClient": () => /* binding */ CardApiClient,
/* harmony export */   "CollectionApiClient": () => /* binding */ CollectionApiClient,
/* harmony export */   "DeckApiClient": () => /* binding */ DeckApiClient,
/* harmony export */   "GameApiClient": () => /* binding */ GameApiClient,
/* harmony export */   "StoreApiClient": () => /* binding */ StoreApiClient,
/* harmony export */   "UserModel": () => /* binding */ UserModel,
/* harmony export */   "ErrorViewModel": () => /* binding */ ErrorViewModel,
/* harmony export */   "CardModel": () => /* binding */ CardModel,
/* harmony export */   "Rarity": () => /* binding */ Rarity,
/* harmony export */   "CardCollectionModel": () => /* binding */ CardCollectionModel,
/* harmony export */   "DeckModel": () => /* binding */ DeckModel,
/* harmony export */   "DeckCardModel": () => /* binding */ DeckCardModel,
/* harmony export */   "GameModel": () => /* binding */ GameModel,
/* harmony export */   "TurnModel": () => /* binding */ TurnModel,
/* harmony export */   "GameType": () => /* binding */ GameType,
/* harmony export */   "GameViewModel": () => /* binding */ GameViewModel,
/* harmony export */   "GameTripleTriadMoveViewModel": () => /* binding */ GameTripleTriadMoveViewModel,
/* harmony export */   "StoreItemModel": () => /* binding */ StoreItemModel,
/* harmony export */   "ApiException": () => /* binding */ ApiException
/* harmony export */ });
/* provided dependency */ var CardHeroApiClientBase = __webpack_require__(/*! ./ClientApp/clients/CardHeroApiClientBase.ts */ 248);
class AccountApiClient extends CardHeroApiClientBase {
    constructor(baseUrl, http) {
        super();
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }
    get() {
        let url_ = this.baseUrl + "/api/account";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processGet(_response);
        });
    }
    processGet(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 200) {
            return response.text().then((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserModel.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 401) {
            return response.text().then((_responseText) => {
                let result401 = null;
                let resultData401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result401 = ErrorViewModel.fromJS(resultData401);
                return throwException("A server side error occurred.", status, _responseText, _headers, result401);
            });
        }
        else {
            return response.text().then((_responseText) => {
                let resultdefault = null;
                let resultDatadefault = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                resultdefault = ErrorViewModel.fromJS(resultDatadefault);
                return throwException("A server side error occurred.", status, _responseText, _headers, resultdefault);
            });
        }
    }
}
class CardApiClient extends CardHeroApiClientBase {
    constructor(baseUrl, http) {
        super();
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }
    get(ids, name, page, pageSize, sort) {
        let url_ = this.baseUrl + "/api/cards?";
        if (ids !== undefined)
            ids && ids.forEach(item => { url_ += "Ids=" + encodeURIComponent("" + item) + "&"; });
        if (name !== undefined)
            url_ += "Name=" + encodeURIComponent("" + name) + "&";
        if (page !== undefined)
            url_ += "Page=" + encodeURIComponent("" + page) + "&";
        if (pageSize !== undefined)
            url_ += "PageSize=" + encodeURIComponent("" + pageSize) + "&";
        if (sort !== undefined)
            url_ += "Sort=" + encodeURIComponent("" + sort) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processGet(_response);
        });
    }
    processGet(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 200) {
            return response.text().then((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(CardModel.fromJS(item));
                }
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
}
class CollectionApiClient extends CardHeroApiClientBase {
    constructor(baseUrl, http) {
        super();
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }
    get(ids, page, pageSize, sort) {
        let url_ = this.baseUrl + "/api/collections?";
        if (ids !== undefined)
            ids && ids.forEach(item => { url_ += "Ids=" + encodeURIComponent("" + item) + "&"; });
        if (page !== undefined)
            url_ += "Page=" + encodeURIComponent("" + page) + "&";
        if (pageSize !== undefined)
            url_ += "PageSize=" + encodeURIComponent("" + pageSize) + "&";
        if (sort !== undefined)
            url_ += "Sort=" + encodeURIComponent("" + sort) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processGet(_response);
        });
    }
    processGet(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 200) {
            return response.text().then((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(CardCollectionModel.fromJS(item));
                }
                return result200;
            });
        }
        else if (status === 401) {
            return response.text().then((_responseText) => {
                let result401 = null;
                let resultData401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result401 = ErrorViewModel.fromJS(resultData401);
                return throwException("A server side error occurred.", status, _responseText, _headers, result401);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
}
class DeckApiClient extends CardHeroApiClientBase {
    constructor(baseUrl, http) {
        super();
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }
    get(ids, name, page, pageSize, sort) {
        let url_ = this.baseUrl + "/api/decks?";
        if (ids !== undefined)
            ids && ids.forEach(item => { url_ += "Ids=" + encodeURIComponent("" + item) + "&"; });
        if (name !== undefined)
            url_ += "Name=" + encodeURIComponent("" + name) + "&";
        if (page !== undefined)
            url_ += "Page=" + encodeURIComponent("" + page) + "&";
        if (pageSize !== undefined)
            url_ += "PageSize=" + encodeURIComponent("" + pageSize) + "&";
        if (sort !== undefined)
            url_ += "Sort=" + encodeURIComponent("" + sort) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processGet(_response);
        });
    }
    processGet(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 401) {
            return response.text().then((_responseText) => {
                let result401 = null;
                let resultData401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result401 = ErrorViewModel.fromJS(resultData401);
                return throwException("A server side error occurred.", status, _responseText, _headers, result401);
            });
        }
        else if (status === 200) {
            return response.text().then((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(DeckModel.fromJS(item));
                }
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
    create(model) {
        let url_ = this.baseUrl + "/api/decks";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(model);
        let options_ = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processCreate(_response);
        });
    }
    processCreate(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 401) {
            return response.text().then((_responseText) => {
                let result401 = null;
                let resultData401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result401 = ErrorViewModel.fromJS(resultData401);
                return throwException("A server side error occurred.", status, _responseText, _headers, result401);
            });
        }
        else if (status === 201) {
            return response.text().then((_responseText) => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = DeckModel.fromJS(resultData201);
                return result201;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
    getById(id) {
        let url_ = this.baseUrl + "/api/decks/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processGetById(_response);
        });
    }
    processGetById(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 401) {
            return response.text().then((_responseText) => {
                let result401 = null;
                let resultData401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result401 = ErrorViewModel.fromJS(resultData401);
                return throwException("A server side error occurred.", status, _responseText, _headers, result401);
            });
        }
        else if (status === 200) {
            return response.text().then((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = DeckModel.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 404) {
            return response.text().then((_responseText) => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ErrorViewModel.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
}
class GameApiClient extends CardHeroApiClientBase {
    constructor(baseUrl, http) {
        super();
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }
    get(gameId, name, startTime, endTime, playerCount, activeOnly, type, page, pageSize, sort) {
        let url_ = this.baseUrl + "/api/games?";
        if (gameId !== undefined)
            url_ += "GameId=" + encodeURIComponent("" + gameId) + "&";
        if (name !== undefined)
            url_ += "Name=" + encodeURIComponent("" + name) + "&";
        if (startTime !== undefined)
            url_ += "StartTime=" + encodeURIComponent(startTime ? "" + startTime.toJSON() : "") + "&";
        if (endTime !== undefined)
            url_ += "EndTime=" + encodeURIComponent(endTime ? "" + endTime.toJSON() : "") + "&";
        if (playerCount === null)
            throw new Error("The parameter 'playerCount' cannot be null.");
        else if (playerCount !== undefined)
            url_ += "PlayerCount=" + encodeURIComponent("" + playerCount) + "&";
        if (activeOnly === null)
            throw new Error("The parameter 'activeOnly' cannot be null.");
        else if (activeOnly !== undefined)
            url_ += "ActiveOnly=" + encodeURIComponent("" + activeOnly) + "&";
        if (type !== undefined)
            url_ += "Type=" + encodeURIComponent("" + type) + "&";
        if (page !== undefined)
            url_ += "Page=" + encodeURIComponent("" + page) + "&";
        if (pageSize !== undefined)
            url_ += "PageSize=" + encodeURIComponent("" + pageSize) + "&";
        if (sort !== undefined)
            url_ += "Sort=" + encodeURIComponent("" + sort) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processGet(_response);
        });
    }
    processGet(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 200) {
            return response.text().then((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(GameModel.fromJS(item));
                }
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
    post(model) {
        let url_ = this.baseUrl + "/api/games";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(model);
        let options_ = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processPost(_response);
        });
    }
    processPost(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 201) {
            return response.text().then((_responseText) => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = GameModel.fromJS(resultData201);
                return result201;
            });
        }
        else if (status === 401) {
            return response.text().then((_responseText) => {
                let result401 = null;
                let resultData401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result401 = ErrorViewModel.fromJS(resultData401);
                return throwException("A server side error occurred.", status, _responseText, _headers, result401);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
    getById(id) {
        let url_ = this.baseUrl + "/api/games/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processGetById(_response);
        });
    }
    processGetById(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 200) {
            return response.text().then((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = GameViewModel.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 404) {
            return response.text().then((_responseText) => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ErrorViewModel.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
    move(id, model) {
        let url_ = this.baseUrl + "/api/games/{id}/move";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(model);
        let options_ = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processMove(_response);
        });
    }
    processMove(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 201) {
            return response.text().then((_responseText) => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = GameTripleTriadMoveViewModel.fromJS(resultData201);
                return result201;
            });
        }
        else if (status === 401) {
            return response.text().then((_responseText) => {
                let result401 = null;
                let resultData401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result401 = ErrorViewModel.fromJS(resultData401);
                return throwException("A server side error occurred.", status, _responseText, _headers, result401);
            });
        }
        else if (status === 404) {
            return response.text().then((_responseText) => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ErrorViewModel.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
}
class StoreApiClient extends CardHeroApiClientBase {
    constructor(baseUrl, http) {
        super();
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }
    get(page, pageSize, sort) {
        let url_ = this.baseUrl + "/api/store?";
        if (page !== undefined)
            url_ += "Page=" + encodeURIComponent("" + page) + "&";
        if (pageSize !== undefined)
            url_ += "PageSize=" + encodeURIComponent("" + pageSize) + "&";
        if (sort !== undefined)
            url_ += "Sort=" + encodeURIComponent("" + sort) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processGet(_response);
        });
    }
    processGet(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 200) {
            return response.text().then((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(StoreItemModel.fromJS(item));
                }
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
    buyStoreItem(storeItem) {
        let url_ = this.baseUrl + "/api/store";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(storeItem);
        let options_ = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then((_response) => {
            return this.processBuyStoreItem(_response);
        });
    }
    processBuyStoreItem(response) {
        const status = response.status;
        let _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach((v, k) => _headers[k] = v);
        }
        ;
        if (status === 201) {
            return response.text().then((_responseText) => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData201)) {
                    result201 = [];
                    for (let item of resultData201)
                        result201.push(CardCollectionModel.fromJS(item));
                }
                return result201;
            });
        }
        else if (status === 401) {
            return response.text().then((_responseText) => {
                let result401 = null;
                let resultData401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result401 = ErrorViewModel.fromJS(resultData401);
                return throwException("A server side error occurred.", status, _responseText, _headers, result401);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    }
}
class UserModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.id = data["id"];
            this.identifier = data["identifier"];
            this.createdDate = data["createdDate"] ? new Date(data["createdDate"].toString()) : undefined;
            this.fullName = data["fullName"];
            this.idPsource = data["idPsource"];
            this.coins = data["coins"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new UserModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["identifier"] = this.identifier;
        data["createdDate"] = this.createdDate ? this.createdDate.toISOString() : undefined;
        data["fullName"] = this.fullName;
        data["idPsource"] = this.idPsource;
        data["coins"] = this.coins;
        return data;
    }
}
class ErrorViewModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.message = data["message"];
            if (Array.isArray(data["stackTrace"])) {
                this.stackTrace = [];
                for (let item of data["stackTrace"])
                    this.stackTrace.push(item);
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new ErrorViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["message"] = this.message;
        if (Array.isArray(this.stackTrace)) {
            data["stackTrace"] = [];
            for (let item of this.stackTrace)
                data["stackTrace"].push(item);
        }
        return data;
    }
}
class CardModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.id = data["id"];
            this.name = data["name"];
            this.description = data["description"];
            this.upAttack = data["upAttack"];
            this.rightAttack = data["rightAttack"];
            this.downAttack = data["downAttack"];
            this.leftAttack = data["leftAttack"];
            this.health = data["health"];
            this.attack = data["attack"];
            this.defence = data["defence"];
            this.totalStats = data["totalStats"];
            this.isFavourited = data["isFavourited"];
            this.rarity = data["rarity"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new CardModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["description"] = this.description;
        data["upAttack"] = this.upAttack;
        data["rightAttack"] = this.rightAttack;
        data["downAttack"] = this.downAttack;
        data["leftAttack"] = this.leftAttack;
        data["health"] = this.health;
        data["attack"] = this.attack;
        data["defence"] = this.defence;
        data["totalStats"] = this.totalStats;
        data["isFavourited"] = this.isFavourited;
        data["rarity"] = this.rarity;
        return data;
    }
}
var Rarity;
(function (Rarity) {
    Rarity[Rarity["Common"] = 1] = "Common";
    Rarity[Rarity["Uncommon"] = 2] = "Uncommon";
    Rarity[Rarity["Rare"] = 3] = "Rare";
    Rarity[Rarity["Epic"] = 4] = "Epic";
    Rarity[Rarity["Legendary"] = 5] = "Legendary";
})(Rarity || (Rarity = {}));
class CardCollectionModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.id = data["id"];
            this.cardId = data["cardId"];
            this.userId = data["userId"];
            this.card = data["card"] ? CardModel.fromJS(data["card"]) : undefined;
            this.user = data["user"] ? UserModel.fromJS(data["user"]) : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new CardCollectionModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["cardId"] = this.cardId;
        data["userId"] = this.userId;
        data["card"] = this.card ? this.card.toJSON() : undefined;
        data["user"] = this.user ? this.user.toJSON() : undefined;
        return data;
    }
}
class DeckModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.id = data["id"];
            this.name = data["name"];
            this.description = data["description"];
            this.maxCards = data["maxCards"];
            this.isFavourited = data["isFavourited"];
            if (Array.isArray(data["cards"])) {
                this.cards = [];
                for (let item of data["cards"])
                    this.cards.push(DeckCardModel.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new DeckModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["description"] = this.description;
        data["maxCards"] = this.maxCards;
        data["isFavourited"] = this.isFavourited;
        if (Array.isArray(this.cards)) {
            data["cards"] = [];
            for (let item of this.cards)
                data["cards"].push(item.toJSON());
        }
        return data;
    }
}
class DeckCardModel extends CardModel {
    constructor(data) {
        super(data);
    }
    init(data) {
        super.init(data);
        if (data) {
            this.cardCollectionId = data["cardCollectionId"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new DeckCardModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["cardCollectionId"] = this.cardCollectionId;
        super.toJSON(data);
        return data;
    }
}
class GameModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.id = data["id"];
            this.name = data["name"];
            this.startTime = data["startTime"] ? new Date(data["startTime"].toString()) : undefined;
            this.endTime = data["endTime"] ? new Date(data["endTime"].toString()) : undefined;
            if (Array.isArray(data["users"])) {
                this.users = [];
                for (let item of data["users"])
                    this.users.push(UserModel.fromJS(item));
            }
            if (Array.isArray(data["turns"])) {
                this.turns = [];
                for (let item of data["turns"])
                    this.turns.push(TurnModel.fromJS(item));
            }
            this.currentUser = data["currentUser"] ? UserModel.fromJS(data["currentUser"]) : undefined;
            this.winner = data["winner"] ? UserModel.fromJS(data["winner"]) : undefined;
            this.columns = data["columns"];
            this.rows = data["rows"];
            this.type = data["type"];
            this.deckId = data["deckId"];
            this.deck = data["deck"] ? DeckModel.fromJS(data["deck"]) : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new GameModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["startTime"] = this.startTime ? this.startTime.toISOString() : undefined;
        data["endTime"] = this.endTime ? this.endTime.toISOString() : undefined;
        if (Array.isArray(this.users)) {
            data["users"] = [];
            for (let item of this.users)
                data["users"].push(item.toJSON());
        }
        if (Array.isArray(this.turns)) {
            data["turns"] = [];
            for (let item of this.turns)
                data["turns"].push(item.toJSON());
        }
        data["currentUser"] = this.currentUser ? this.currentUser.toJSON() : undefined;
        data["winner"] = this.winner ? this.winner.toJSON() : undefined;
        data["columns"] = this.columns;
        data["rows"] = this.rows;
        data["type"] = this.type;
        data["deckId"] = this.deckId;
        data["deck"] = this.deck ? this.deck.toJSON() : undefined;
        return data;
    }
}
class TurnModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.id = data["id"];
            this.startTime = data["startTime"] ? new Date(data["startTime"].toString()) : undefined;
            this.endTime = data["endTime"] ? new Date(data["endTime"].toString()) : undefined;
            this.user = data["user"] ? UserModel.fromJS(data["user"]) : undefined;
            this.game = data["game"] ? GameModel.fromJS(data["game"]) : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new TurnModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["startTime"] = this.startTime ? this.startTime.toISOString() : undefined;
        data["endTime"] = this.endTime ? this.endTime.toISOString() : undefined;
        data["user"] = this.user ? this.user.toJSON() : undefined;
        data["game"] = this.game ? this.game.toJSON() : undefined;
        return data;
    }
}
var GameType;
(function (GameType) {
    GameType[GameType["TripleTriad"] = 1] = "TripleTriad";
})(GameType || (GameType = {}));
class GameViewModel extends GameModel {
    constructor(data) {
        super(data);
    }
    init(data) {
        super.init(data);
        if (data) {
            this.data = data["data"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new GameViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["data"] = this.data;
        super.toJSON(data);
        return data;
    }
}
class GameTripleTriadMoveViewModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.row = data["row"];
            this.column = data["column"];
            this.cardCollectionId = data["cardCollectionId"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new GameTripleTriadMoveViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["row"] = this.row;
        data["column"] = this.column;
        data["cardCollectionId"] = this.cardCollectionId;
        return data;
    }
}
class StoreItemModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(data) {
        if (data) {
            this.id = data["id"];
            this.name = data["name"];
            this.description = data["description"];
            this.cost = data["cost"];
            this.itemCount = data["itemCount"];
            this.expiry = data["expiry"] ? new Date(data["expiry"].toString()) : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new StoreItemModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["description"] = this.description;
        data["cost"] = this.cost;
        data["itemCount"] = this.itemCount;
        data["expiry"] = this.expiry ? this.expiry.toISOString() : undefined;
        return data;
    }
}
class ApiException extends Error {
    constructor(message, status, response, headers, result) {
        super();
        this.isApiException = true;
        this.message = message;
        this.status = status;
        this.response = response;
        this.headers = headers;
        this.result = result;
    }
    static isApiException(obj) {
        return obj.isApiException === true;
    }
}
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        throw result;
    else
        throw new ApiException(message, status, response, headers, null);
}


/***/ }),

/***/ 186:
/*!*************************************************!*\
  !*** ./ClientApp/components/shared/NavMenu.tsx ***!
  \*************************************************/
/*! export NavMenu [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.n, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NavMenu": () => /* binding */ NavMenu
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 294);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_AccountContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../contexts/AccountContext */ 224);
/* harmony import */ var _services_AccountService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/AccountService */ 254);
/* harmony import */ var _styles_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../styles/index */ 905);
/* harmony import */ var _appBootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./appBootstrap */ 205);
/* harmony import */ var _CoinFormat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CoinFormat */ 196);






class NavMenu extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {
    constructor(props) {
        super(props);
        this.state = {};
    }
    async componentDidMount() {
        const user = await _services_AccountService__WEBPACK_IMPORTED_MODULE_2__.default.getAccount();
        if (user) {
            this.context.setUser(user);
        }
    }
    render() {
        const u = _appBootstrap__WEBPACK_IMPORTED_MODULE_4__.default.url;
        const user = this.context.user;
        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("nav", { className: "navbar navbar-dark bg-dark navbar-expand-md fixed-top" },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", { className: "navbar-toggler navbar-toggler-right", type: "button", "data-toggle": "collapse", "data-target": "#navbar-header", "aria-controls": "navbar-header", "aria-expanded": "false", "aria-label": "Toggle navigation" },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: "navbar-toggler-icon" })),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { href: u(), className: "navbar-brand" },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", { src: u('favicon.ico'), className: "d-inline-block align-top", width: "32", height: "32", alt: "Card Hero TS" }),
                ' ',
                "Card Hero TS"),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "collapse navbar-collapse", id: "navbar-header" },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("ul", { className: "navbar-nav" },
                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item" },
                        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link", href: u('Card') }, "Cards")),
                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item" },
                        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link", href: u('Game') }, "Games")),
                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item" },
                        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link", href: u('Store') }, "Store")),
                    user &&
                        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item" },
                                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link", href: u('Collection') }, "Collection")),
                            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item" },
                                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link", href: u('Deck') }, "Decks")))),
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("ul", { className: "navbar-nav ml-auto" },
                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item" },
                        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link", href: u('swagger') },
                            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles_index__WEBPACK_IMPORTED_MODULE_3__.default, { icon: "code" }),
                            ' ',
                            "API")),
                    user ?
                        (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item" },
                                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link" },
                                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_CoinFormat__WEBPACK_IMPORTED_MODULE_5__.default, { coins: user.coins, title: `You have ${user.coins} coins` }))),
                            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item dropdown" },
                                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link dropdown-toggle", id: "user-navbar-dropdown-menu", "data-toggle": "dropdown", "aria-haspopup": "true", "aria-expanded": "false" }, user.fullName),
                                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "dropdown-menu dropdown-menu-right", "aria-labelledby": "user-navbar-dropdown-menu" },
                                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "dropdown-item", href: "#" }, "Profile"),
                                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "dropdown-item", href: "#" }, "Active Games"),
                                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "dropdown-divider" }),
                                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "dropdown-item", href: "#" }, "Settings"),
                                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "dropdown-divider" }),
                                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "dropdown-item", href: u('SignOut') }, "Logout")))))
                        :
                            (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { className: "nav-item" },
                                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", { className: "nav-link", href: u('SignIn') }, "Sign in")))))));
    }
}
NavMenu.contextType = _contexts_AccountContext__WEBPACK_IMPORTED_MODULE_1__.AccountContext;


/***/ }),

/***/ 196:
/*!****************************************************!*\
  !*** ./ClientApp/components/shared/CoinFormat.tsx ***!
  \****************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.n, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ CoinFormat
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 294);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _styles_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../styles/index */ 905);


function CoinFormat(props) {
    if (props.coins < 0)
        return null;
    const c = props.coins;
    const gold = Math.floor(c / 10000);
    const silver = Math.floor(c / 100) % 100;
    const bronze = c % 100;
    const se = !!props.stripEmpty;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { title: props.title },
        (!se || (se && gold)) &&
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: "coin-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles_index__WEBPACK_IMPORTED_MODULE_1__.default, { icon: "coins", className: "coin-gold" }),
                ' ',
                gold),
        (!se || (se && silver)) &&
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: "coin-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles_index__WEBPACK_IMPORTED_MODULE_1__.default, { icon: "coins", className: "coin-silver" }),
                ' ',
                silver),
        (!se || (se && bronze)) &&
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: "coin-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles_index__WEBPACK_IMPORTED_MODULE_1__.default, { icon: "coins", className: "coin-bronze" }),
                ' ',
                bronze)));
}


/***/ }),

/***/ 205:
/*!*****************************************************!*\
  !*** ./ClientApp/components/shared/appBootstrap.ts ***!
  \*****************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__ */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ AppBootstrap
/* harmony export */ });
class AppBootstrap {
    static url(...parts) {
        return AppBootstrap.baseUrl + parts.join('/');
    }
}
AppBootstrap.baseUrl = document.querySelector('base').getAttribute('href');
AppBootstrap.rootElement = document.getElementById('root');


/***/ }),

/***/ 224:
/*!**********************************************!*\
  !*** ./ClientApp/contexts/AccountContext.ts ***!
  \**********************************************/
/*! export AccountContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.n, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccountContext": () => /* binding */ AccountContext
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 294);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const AccountContext = react__WEBPACK_IMPORTED_MODULE_0___default().createContext({ setUser: (_user) => { } });


/***/ }),

/***/ 232:
/*!*****************************************************!*\
  !*** ./ClientApp/services/CardCollectionService.ts ***!
  \*****************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ CardCollectionService
/* harmony export */ });
/* harmony import */ var _clients_clients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clients/clients */ 103);
/* harmony import */ var _components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/shared/appBootstrap */ 205);


class CardCollectionService {
    static async getCollection(filter) {
        const client = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.CollectionApiClient(_components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__.default.baseUrl);
        if (!filter) {
            filter = {};
        }
        const model = await client.get(filter.ids, filter.page, filter.pageSize);
        return model;
    }
}


/***/ }),

/***/ 241:
/*!********************************************!*\
  !*** ./ClientApp/services/StoreService.ts ***!
  \********************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ StoreService
/* harmony export */ });
/* harmony import */ var _clients_clients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clients/clients */ 103);
/* harmony import */ var _components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/shared/appBootstrap */ 205);


class StoreService {
    static async getStoreItems() {
        const client = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.StoreApiClient(_components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__.default.baseUrl);
        const model = await client.get();
        return model;
    }
    static async buyCardBundle(id) {
        const client = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.StoreApiClient(_components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__.default.baseUrl);
        const postModel = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.StoreItemModel({
            id: id
        });
        const model = await client.buyStoreItem(postModel);
        return model;
    }
}


/***/ }),

/***/ 248:
/*!****************************************************!*\
  !*** ./ClientApp/clients/CardHeroApiClientBase.ts ***!
  \****************************************************/
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";

class CardHeroApiClientBase {
    getBaseUrl(defaultBaseUrl, baseUrl) {
        if (!baseUrl) {
            return defaultBaseUrl;
        }
        if (baseUrl.endsWith('/')) {
            return baseUrl.substring(0, baseUrl.length - 2);
        }
        return baseUrl;
    }
}
module.exports = CardHeroApiClientBase;


/***/ }),

/***/ 254:
/*!**********************************************!*\
  !*** ./ClientApp/services/AccountService.ts ***!
  \**********************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ AccountService
/* harmony export */ });
/* harmony import */ var _clients_clients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clients/clients */ 103);
/* harmony import */ var _components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/shared/appBootstrap */ 205);


class AccountService {
    static async getAccount() {
        const client = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.AccountApiClient(_components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__.default.baseUrl);
        const model = await client.get();
        return model;
    }
}


/***/ }),

/***/ 266:
/*!*********************************!*\
  !*** ./ClientApp/utils/date.ts ***!
  \*********************************/
/*! export relativeFromNow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.n, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "relativeFromNow": () => /* binding */ relativeFromNow
/* harmony export */ });
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ 484);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs/plugin/relativeTime */ 110);
/* harmony import */ var dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_1__);


dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_1___default()));
function relativeFromNow(date) {
    return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(date).fromNow();
}


/***/ }),

/***/ 292:
/*!***********************************!*\
  !*** ./ClientApp/utils/nameof.ts ***!
  \***********************************/
/*! export nameof [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__ */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nameof": () => /* binding */ nameof
/* harmony export */ });
const nameof = (name) => name;


/***/ }),

/***/ 439:
/*!****************************************************!*\
  !*** ./ClientApp/components/shared/DateFormat.tsx ***!
  \****************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.n, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ DateFormat
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 294);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/date */ 266);


function DateFormat(props) {
    const d = (0,_utils_date__WEBPACK_IMPORTED_MODULE_1__.relativeFromNow)(props.date);
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { title: props.date.toUTCString() }, d));
}


/***/ }),

/***/ 452:
/*!*******************************************!*\
  !*** ./ClientApp/services/CardService.ts ***!
  \*******************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ CardService
/* harmony export */ });
/* harmony import */ var _clients_clients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clients/clients */ 103);
/* harmony import */ var _components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/shared/appBootstrap */ 205);


class CardService {
    static async getCards(filter) {
        const client = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.CardApiClient(_components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__.default.baseUrl);
        const model = client.get(filter.ids, filter.name, filter.page, filter.pageSize);
        return model;
    }
}


/***/ }),

/***/ 503:
/*!****************************************************!*\
  !*** ./ClientApp/components/shared/CardWidget.tsx ***!
  \****************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.n, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ CardWidget
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 294);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _clients_clients__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../clients/clients */ 103);
/* harmony import */ var _styles_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../styles/index */ 905);



function CardWidget(props) {
    const c = props.card;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: 'card collection-card card-rarity_' + _clients_clients__WEBPACK_IMPORTED_MODULE_1__.Rarity[c.rarity].toLowerCase() },
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "card-body" },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h1", { className: "text-center", title: "Up attack" }, c.upAttack),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h1", { className: "float-right", title: "Right attack" }, c.rightAttack),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h1", { title: "Left attack" }, c.leftAttack),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h1", { className: "text-center", title: "Down attack" }, c.downAttack)),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "card-footer" },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h2", { className: 'text-center card-rarity-symbols text-rarity_' + _clients_clients__WEBPACK_IMPORTED_MODULE_1__.Rarity[c.rarity].toLowerCase(), title: _clients_clients__WEBPACK_IMPORTED_MODULE_1__.Rarity[c.rarity] }, Array(c.rarity).fill(0).map((_, i) => react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles_index__WEBPACK_IMPORTED_MODULE_2__.default, { key: i, icon: "star" }))),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", { className: "text-center", title: c.name }, c.name))));
}


/***/ }),

/***/ 618:
/*!*******************************************!*\
  !*** ./ClientApp/services/GameService.ts ***!
  \*******************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ GameService
/* harmony export */ });
/* harmony import */ var _components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/shared/appBootstrap */ 205);
/* harmony import */ var _models_GameModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/GameModel */ 808);
/* harmony import */ var _models_GameTripleTrialMoveModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/GameTripleTrialMoveModel */ 937);



class GameService {
    static async getGameById(id) {
        let baseUrl = GameService.baseUrl + '/' + id;
        const response = await fetch(baseUrl);
        const data = await response.json();
        if (data) {
            return new _models_GameModel__WEBPACK_IMPORTED_MODULE_1__.default().from(data);
        }
        return null;
    }
    static async getGames(filter) {
        let baseUrl = GameService.baseUrl;
        if (filter != null) {
            baseUrl += '?' + Object.keys(filter)
                .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(filter[k]))
                .join('&');
        }
        const response = await fetch(baseUrl);
        const data = await response.json();
        if (data) {
            return data.map(x => new _models_GameModel__WEBPACK_IMPORTED_MODULE_1__.default().from(x));
        }
        return null;
    }
    static async createGame(model) {
        let baseUrl = GameService.baseUrl;
        const response = await fetch(baseUrl, {
            body: JSON.stringify(model),
            headers: {
                'Content-Type': 'application/json'
            },
            method: "POST"
        });
        const data = await response.json();
        const newDeck = new _models_GameModel__WEBPACK_IMPORTED_MODULE_1__.default().from(data);
        return newDeck;
    }
    static async move(id, model) {
        let baseUrl = GameService.baseUrl + '/' + id + '/move';
        const response = await fetch(baseUrl, {
            body: JSON.stringify(model),
            headers: {
                'Content-Type': 'application/json'
            },
            method: "POST"
        });
        const data = await response.json();
        const newDeck = new _models_GameTripleTrialMoveModel__WEBPACK_IMPORTED_MODULE_2__.default().from(data);
        return newDeck;
    }
}
GameService.baseUrl = _components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_0__.default.baseUrl + 'api/games';


/***/ }),

/***/ 797:
/*!*************************************************!*\
  !*** ./ClientApp/components/shared/dragType.ts ***!
  \*************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__ */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var DragType;
(function (DragType) {
    DragType[DragType["Card"] = 0] = "Card";
})(DragType || (DragType = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DragType);


/***/ }),

/***/ 808:
/*!***************************************!*\
  !*** ./ClientApp/models/GameModel.ts ***!
  \***************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ GameModel
/* harmony export */ });
/* harmony import */ var _clients_clients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clients/clients */ 103);
/* harmony import */ var _GameTripleTriadModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GameTripleTriadModel */ 71);


class GameModel {
    from(o) {
        if (!o)
            return this;
        this.id = o.id;
        this.name = o.name;
        this.type = o.type;
        this.startTime = new Date(o.startTime);
        if (o.data) {
            switch (this.type) {
                case _clients_clients__WEBPACK_IMPORTED_MODULE_0__.GameType.TripleTriad:
                    this.data = new _GameTripleTriadModel__WEBPACK_IMPORTED_MODULE_1__.default().from(o.data);
                    break;
            }
        }
        if (o.deck) {
            this.deck = _clients_clients__WEBPACK_IMPORTED_MODULE_0__.DeckModel.fromJS(o.deck);
        }
        return this;
    }
}


/***/ }),

/***/ 829:
/*!*******************************************!*\
  !*** ./ClientApp/services/DeckService.ts ***!
  \*******************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ DeckService
/* harmony export */ });
/* harmony import */ var _clients_clients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clients/clients */ 103);
/* harmony import */ var _components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/shared/appBootstrap */ 205);


class DeckService {
    static async getDecks(filter) {
        const client = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.DeckApiClient(_components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__.default.baseUrl);
        if (!filter) {
            filter = {};
        }
        const model = await client.get(filter.ids, filter.name, filter.page, filter.pageSize);
        return model;
    }
    static async createDeck(model) {
        const client = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.DeckApiClient(_components_shared_appBootstrap__WEBPACK_IMPORTED_MODULE_1__.default.baseUrl);
        const postModel = new _clients_clients__WEBPACK_IMPORTED_MODULE_0__.DeckModel();
        postModel.name = model.name;
        postModel.description = model.description;
        var newModel = await client.create(postModel);
        return newModel;
    }
}


/***/ }),

/***/ 872:
/*!************************************************!*\
  !*** ./ClientApp/components/shared/Layout.tsx ***!
  \************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.n, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Layout
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 294);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_AccountContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../contexts/AccountContext */ 224);
/* harmony import */ var _NavMenu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NavMenu */ 186);



class Layout extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {
    constructor(props) {
        super(props);
        this.state = {
            setUser: (user) => {
                this.setState({
                    user: user
                });
            }
        };
    }
    render() {
        var hasSideContent = this.props.sideContent != null;
        var mainCol = hasSideContent ? 10 : 12;
        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_contexts_AccountContext__WEBPACK_IMPORTED_MODULE_1__.AccountContext.Provider, { value: this.state },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_NavMenu__WEBPACK_IMPORTED_MODULE_2__.NavMenu, null),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "container-fluid body-content" },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "row" },
                    hasSideContent &&
                        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "col-lg-2" }, this.props.sideContent),
                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: 'col-lg-' + mainCol }, this.props.children)))));
    }
}


/***/ }),

/***/ 905:
/*!************************************!*\
  !*** ./ClientApp/styles/index.tsx ***!
  \************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.n, __webpack_require__.d */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Icon
/* harmony export */ });
/* harmony import */ var _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fortawesome/fontawesome-svg-core */ 947);
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ 436);
/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ 814);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ 294);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);




_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.library.add(_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__.faCode, _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__.faCoins, _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__.faPlus, _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__.faStar);
function Icon(props) {
    return (react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__.FontAwesomeIcon, Object.assign({ icon: props.icon, fixedWidth: true }, props)));
}


/***/ }),

/***/ 937:
/*!******************************************************!*\
  !*** ./ClientApp/models/GameTripleTrialMoveModel.ts ***!
  \******************************************************/
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__ */
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ GameTripleTriadMoveModel
/* harmony export */ });
class GameTripleTriadMoveModel {
    from(o) {
        if (!o)
            return this;
        this.cardCollectionId = o.cardCollectionId;
        this.column = o.column;
        this.row = o.row;
        return this;
    }
}


/***/ })

/******/ },
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ 	"use strict";
/******/ 
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		var hasOwnProperty = Object.prototype.hasOwnProperty;
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(hasOwnProperty.call(definition, key) && !hasOwnProperty.call(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.hmd = (module) => {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'loaded', {
/******/ 				enumerable: true,
/******/ 				get: () => module.l
/******/ 			});
/******/ 			Object.defineProperty(module, 'id', {
/******/ 				enumerable: true,
/******/ 				get: () => module.i
/******/ 			});
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: () => {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// Promise = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			712: 0
/******/ 		};
/******/ 		
/******/ 		var deferredModules = [
/******/ 		
/******/ 		];
/******/ 		
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		var checkDeferredModules = () => {
/******/ 		
/******/ 		};
/******/ 		function checkDeferredModulesImpl() {
/******/ 			var result;
/******/ 			for(var i = 0; i < deferredModules.length; i++) {
/******/ 				var deferredModule = deferredModules[i];
/******/ 				var fulfilled = true;
/******/ 				for(var j = 1; j < deferredModule.length; j++) {
/******/ 					var depId = deferredModule[j];
/******/ 					if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferredModules.splice(i--, 1);
/******/ 					result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 				}
/******/ 			}
/******/ 			// no prefetch
/******/ 			return result;
/******/ 		}
/******/ 		__webpack_require__.x = () => {
/******/ 			return (checkDeferredModules = checkDeferredModulesImpl)();
/******/ 		};
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		function webpackJsonpCallback(data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var executeModules = data[2];
/******/ 			var runtime = data[3];
/******/ 		
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0, resolves = [];
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					resolves.push(installedChunks[chunkId][0]);
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			for(moduleId in moreModules) {
/******/ 				if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			if(parentJsonpFunction) parentJsonpFunction(data);
/******/ 		
/******/ 			while(resolves.length) {
/******/ 				resolves.shift()();
/******/ 			}
/******/ 		
/******/ 			// add entry modules from loaded chunk to deferred list
/******/ 			if(executeModules) deferredModules.push.apply(deferredModules, executeModules);
/******/ 		
/******/ 			// run deferred modules when all chunks ready
/******/ 			return checkDeferredModules();
/******/ 		};
/******/ 		
/******/ 		var jsonpArray = window["wj"] = window["wj"] || [];
/******/ 		var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 		jsonpArray.push = webpackJsonpCallback;
/******/ 		jsonpArray = jsonpArray.slice();
/******/ 		for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 		var parentJsonpFunction = oldJsonpFunction;
/******/ 	}();
/******/ 	
/******/ }
);