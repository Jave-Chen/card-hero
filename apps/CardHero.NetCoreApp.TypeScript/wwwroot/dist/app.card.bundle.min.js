(window["wj"] = window["wj"] || []).push([[40],{

/***/ 379:
/***/ ((__unusedmodule, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(294);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(935);
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js
var react_router_dom = __webpack_require__(727);

// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules
var react_router = __webpack_require__(447);

// EXTERNAL MODULE: ./ClientApp/components/shared/appBootstrap.ts
var appBootstrap = __webpack_require__(205);

// EXTERNAL MODULE: ./ClientApp/services/CardService.ts
var CardService = __webpack_require__(452);

// EXTERNAL MODULE: ./ClientApp/components/shared/Layout.tsx + 1 modules
var Layout = __webpack_require__(250);

// CONCATENATED MODULE: ./ClientApp/components/card/Card.tsx




class Card_Card extends react.PureComponent {
    constructor(props) {
        super(props);
        this.state = {};
    }
    async populateCard(id) {
        const cards = await CardService/* default.getCards */.b.getCards({
            ids: [
                id
            ]
        });
        const card = cards[0];
        this.setState({ card: card });
    }
    async componentDidMount() {
        const cardId = this.props.match.params.id;
        await this.populateCard(cardId);
    }
    async componentWillReceiveProps(nextProps) {
        const cardId = this.props.match.params.id;
        if (nextProps.match.params.id !== cardId) {
            await this.populateCard(cardId);
        }
    }
    render() {
        const card = this.state.card;
        if (!card) {
            return null;
        }
        return (react_default().createElement(Layout/* default */.b, null,
            react_default().createElement("div", { className: "row" },
                react_default().createElement("div", { className: "col-lg-4" },
                    react_default().createElement("div", { className: "card" },
                        react_default().createElement("div", { className: "card-body" },
                            react_default().createElement("h4", { className: "card-title" },
                                react_default().createElement(react_router_dom/* Link */.d, { to: '/' + card.id }, card.name)),
                            react_default().createElement("p", { className: "card-text" }),
                            react_default().createElement("table", { className: "table table-striped" },
                                react_default().createElement("thead", { className: "thead-inverse" },
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { colSpan: 2 }, "Stats"))),
                                react_default().createElement("tbody", null,
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { scope: "row" }, "Health"),
                                        react_default().createElement("td", null, card.health)),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { scope: "row" }, "Attack"),
                                        react_default().createElement("td", null, card.attack)),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { scope: "row" }, "Defence"),
                                        react_default().createElement("td", null, card.defence)),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("td", { colSpan: 2 })),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { scope: "row" }, "Up Attack"),
                                        react_default().createElement("td", null, card.upAttack)),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { scope: "row" }, "Right Attack"),
                                        react_default().createElement("td", null, card.rightAttack)),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { scope: "row" }, "Down Attack"),
                                        react_default().createElement("td", null, card.downAttack)),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { scope: "row" }, "Left Attack"),
                                        react_default().createElement("td", null, card.leftAttack)),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("td", { colSpan: 2 })),
                                    react_default().createElement("tr", null,
                                        react_default().createElement("th", { scope: "row" }, "Total Stats"),
                                        react_default().createElement("td", null, card.totalStats))))))),
                react_default().createElement("div", { className: "col-lg-4" }),
                react_default().createElement("div", { className: "col-lg-4" }))));
    }
}

// EXTERNAL MODULE: ./ClientApp/constants/constants.ts
var constants = __webpack_require__(200);

// EXTERNAL MODULE: ./ClientApp/contexts/AccountContext.ts
var AccountContext = __webpack_require__(224);

// EXTERNAL MODULE: ./ClientApp/styles/index.tsx
var styles = __webpack_require__(905);

// CONCATENATED MODULE: ./ClientApp/components/card/CardList.tsx




function CardList(props) {
    const context = (0,react.useContext)(AccountContext/* AccountContext */.u);
    const user = context.user;
    return (react_default().createElement("div", { className: "row" },
        react_default().createElement("table", { className: "table table-striped" },
            react_default().createElement("thead", { className: "thead-inverse" },
                react_default().createElement("tr", null,
                    react_default().createElement("th", null, "Name"),
                    react_default().createElement("th", null, "Health"),
                    react_default().createElement("th", null, "Attack"),
                    react_default().createElement("th", null, "Defence"),
                    react_default().createElement("th", null, "Up Attack"),
                    react_default().createElement("th", null, "Down Attack"),
                    react_default().createElement("th", null, "Left Attack"),
                    react_default().createElement("th", null, "Right Attack"),
                    react_default().createElement("th", null, "Total Stats"))),
            react_default().createElement("tbody", null, props.cards.map(c => react_default().createElement("tr", { key: c.id },
                react_default().createElement("th", { scope: "row" },
                    user &&
                        react_default().createElement(react.Fragment, null,
                            react_default().createElement(styles.default, { icon: "star", className: 'card-favourite' + (c.isFavourited ? ' enabled' : ''), "data-card-id": c.id }),
                            ' '),
                    react_default().createElement(react_router_dom/* Link */.d, { to: '/' + c.id }, c.name)),
                react_default().createElement("td", null, c.health),
                react_default().createElement("td", null, c.attack),
                react_default().createElement("td", null, c.defence),
                react_default().createElement("td", null, c.upAttack),
                react_default().createElement("td", null, c.downAttack),
                react_default().createElement("td", null, c.leftAttack),
                react_default().createElement("td", null, c.rightAttack),
                react_default().createElement("td", null, c.totalStats)))))));
}

// CONCATENATED MODULE: ./ClientApp/components/card/CardSearch.tsx


class CardSearch_CardSearch extends react.Component {
    constructor(props) {
        super(props);
        this.state = {};
    }
    async componentDidMount() {
        await this.getCards();
    }
    async getCards(e) {
        if (e != null) {
            e.preventDefault();
            e.stopPropagation();
        }
        var cards = await CardService/* default.getCards */.b.getCards(this.state);
        if (cards && this.props.onCardsPopulated) {
            this.props.onCardsPopulated(cards);
        }
    }
    onInputChange(prop, e) {
        const newState = {};
        newState[prop] = e.target.value;
        this.setState(newState);
    }
    onSelectChange(prop, e) {
        const newState = {};
        newState[prop] = e.target.value;
        this.setState(newState);
    }
    render() {
        return (react_default().createElement("div", { className: "card" },
            react_default().createElement("h4", { className: "card-header" }, "Cards"),
            react_default().createElement("form", { method: "get", className: "search-filter card-filter" },
                react_default().createElement("div", { className: "card-body" },
                    react_default().createElement("div", { className: "form-group" },
                        react_default().createElement("input", { type: "text", name: "name", className: "form-control", placeholder: "Name", value: this.state.name, onChange: (e) => this.onInputChange('name', e) })),
                    react_default().createElement("div", { className: "form-group" },
                        react_default().createElement("select", { name: "pageSize", className: "form-control", value: this.state.pageSize, onChange: (e) => this.onSelectChange('pageSize', e) },
                            react_default().createElement("option", { value: "10" }, "10"),
                            react_default().createElement("option", { value: "25" }, "25"),
                            react_default().createElement("option", { value: "50" }, "50"),
                            react_default().createElement("option", { value: "100" }, "100")))),
                react_default().createElement("div", { className: "card-footer" },
                    react_default().createElement("button", { type: "submit", className: "btn btn-primary pull-right", onClick: (e) => this.getCards(e) }, "Filter"),
                    react_default().createElement("div", { className: "clearfix" })))));
    }
}

// CONCATENATED MODULE: ./ClientApp/components/card/CardApp.tsx





class CardApp_CardApp extends react.Component {
    constructor(props) {
        super(props);
        this.state = { cards: [] };
    }
    onCardsPopulated(cards) {
        if (constants/* default.Debug */.b.Debug) {
            if (cards != null) {
                cards.forEach(card => {
                    console.log(card);
                });
            }
        }
        this.setState({
            cards: cards
        });
    }
    render() {
        return (react_default().createElement(Layout/* default */.b, { sideContent: react_default().createElement(CardSearch_CardSearch, { onCardsPopulated: (x) => this.onCardsPopulated(x) }) },
            react_default().createElement(CardList, { cards: this.state.cards })));
    }
}

// CONCATENATED MODULE: ./ClientApp/components/card/index.tsx






react_dom_default().render(react_default().createElement(react_router_dom/* BrowserRouter */.r, { basename: appBootstrap/* default.url */.b.url('Card') },
    react_default().createElement(react_router/* Switch */.e, null,
        react_default().createElement(react_router/* Route */.y, { path: "/", exact: true, component: CardApp_CardApp }),
        react_default().createElement(react_router/* Route */.y, { path: "/:id", component: Card_Card }))), appBootstrap/* default.rootElement */.b.rootElement);


/***/ })

},[[379,712,736]]]);