@model GameViewModel

@functions {
    private GameTripleTriadViewModel data;

    bool IsSelected(int row, int column)
    {
        return data.Moves.Any(x => x.Row == row && x.Column == column);
    }

    int? GetCardCollectionId(int row, int column) {
        return data.Moves.FirstOrDefault(x => x.Row == row && x.Column == column)?.CardCollectionId;
    }

    string GetCardCollectionName(int? cardCollectionId)
    {
        return Model.Deck.Cards.FirstOrDefault(x => x.CardCollectionId == cardCollectionId)?.Card.Name;
    }
}

@{
    data = Model.Data as GameTripleTriadViewModel;
}

<div class="card-body">
    <div id="current-game" class="card-text ch-cards game-cards" data-game-id="@Model.Id">
        @for (int i = 0; i < data.Rows; i++)
        {
            @for (int j = 0; j < data.Columns; j++)
            {
                var cardCollectionId = GetCardCollectionId(i, j);
                <div class="card col-4 d-inline-block ch-card game-card @(IsSelected(i, j) ? "selected" : "")" data-row="@i" data-column="@j" data-card-collection-id="@cardCollectionId">
                    <div class="card-body">
                        @GetCardCollectionName(cardCollectionId)
                    </div>
                </div>
            }
        }
    </div>
</div>
